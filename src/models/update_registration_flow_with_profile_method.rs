/*
 * Ory APIs
 *
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * The version of the OpenAPI document: v1.15.7
 * Contact: support@ory.sh
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// UpdateRegistrationFlowWithProfileMethod : Update Registration Flow with Profile Method
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct UpdateRegistrationFlowWithProfileMethod {
    /// The Anti-CSRF Token  This token is only required when performing browser flows.
    #[serde(rename = "csrf_token", skip_serializing_if = "Option::is_none")]
    pub csrf_token: Option<String>,
    /// Screen requests navigation to a previous screen.  This must be set to credential-selection to go back to the credential selection screen. credential-selection RegistrationScreenCredentialSelection nolint:gosec // not a credential previous RegistrationScreenPrevious
    #[serde(rename = "screen", skip_serializing_if = "Option::is_none")]
    pub screen: Option<ScreenEnum>,
    /// Traits  The identity's traits.
    #[serde(rename = "traits")]
    pub traits: serde_json::Value,
    /// Transient data to pass along to any webhooks
    #[serde(rename = "transient_payload", skip_serializing_if = "Option::is_none")]
    pub transient_payload: Option<serde_json::Value>,
}

impl UpdateRegistrationFlowWithProfileMethod {
    /// Update Registration Flow with Profile Method
    pub fn new(traits: serde_json::Value) -> UpdateRegistrationFlowWithProfileMethod {
        UpdateRegistrationFlowWithProfileMethod {
            csrf_token: None,
            screen: None,
            traits,
            transient_payload: None,
        }
    }
}
/// Screen requests navigation to a previous screen.  This must be set to credential-selection to go back to the credential selection screen. credential-selection RegistrationScreenCredentialSelection nolint:gosec // not a credential previous RegistrationScreenPrevious
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ScreenEnum {
    #[serde(rename = "credential-selection")]
    CredentialSelection,
    #[serde(rename = "previous")]
    Previous,
}

impl Default for ScreenEnum {
    fn default() -> ScreenEnum {
        Self::CredentialSelection
    }
}

